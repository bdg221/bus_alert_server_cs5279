package server.BusAlert.Rider;

import com.fasterxml.jackson.annotation.JsonIgnore;
import server.BusAlert.Stop.Stop;

import javax.persistence.*;

/**
 * The Rider class is for the Rider model. The main properties of the Rider are:
 *
 * Id - Long - This is autogenerated by JPA and is the primary key in the table
 * phone - String - This is the phone number of the Rider and will be used when
 *                  sending text message notifications
 * stop - Stop - This is the stop associated with the Rider. By using ManyToOne
 *               the stop is linked to the Stop model
 */
@Entity
public class Rider {

    /**
     * The Id is the unique, primary key associated with the Rider.
     */
    @Id
    @GeneratedValue(strategy= GenerationType.AUTO)
    private Long Id;

    /**
     * The phone is a string of the phone number of the Rider.
     */
    private String phone;

    /**
     * The stop is a Stop object and is connected to the Stop model/table. The
     * property is set to JsonIgnore so that it is not returned by a REST API call
     * as that would invoke an infinite recursion between Rider and Stop objects.
     */
    @ManyToOne
    @JoinColumn(name = "stop_id")
    @JsonIgnore
    private Stop stop;

    private Long stopIdOnly;

    public Rider() {
    }

    /**
     * This constructor is the primary one used by the REST APIs
     * @param phone - string of the phone number of a Rider
     * @param stop - Stop object associated with the Rider
     */
    public Rider(String phone, Stop stop) {
        this.phone = phone;
        this.stop = stop;
    }

    public Long getStopIdOnly() {
        return stopIdOnly;
    }

    public void setStopIdOnly(Long stopIdOnly) {
        this.stopIdOnly = stopIdOnly;
    }

    public Long getId() {
        return Id;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public Stop getStop() {
        return stop;
    }

    public void setStop(Stop stop) {
        this.stop = stop;
    }
}
